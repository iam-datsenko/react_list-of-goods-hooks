{"version":3,"sources":["App.tsx","components/GoodsList/GoodsList.tsx","components/Button/Button.tsx","index.tsx"],"names":["SortType","GoodsList","reorderedGoods","map","good","Button","props","children","className","rest","type","classNames","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goods","visibleGoods","sort","g1","g2","LENGTH","length","ALPHABET","localeCompare","reverse","getReorderedGoods","onClick","status","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0ECfQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAH,OACxC,6BACGA,EAAeC,KAAI,SAAAC,GAAI,OACtB,oBAAe,UAAQ,OAAvB,SACIA,GADKA,S,0CCFFC,EAA0B,SAACC,GACtC,IACEC,EAGED,EAHFC,SACAC,EAEEF,EAFFE,UACGC,EAHL,YAIIH,EAJJ,GAMA,OACE,gDACEI,KAAK,SACLF,UAAWG,IAAW,SAAUH,IAC5BC,GAHN,aAKGF,MFZMK,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGZ,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMa,EAAgB,WAC3B,MAAgCC,mBAASd,EAASe,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAWMjB,EAvCD,SACLkB,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQR,GACN,KAAKhB,EAASyB,OACZ,OAAOF,EAAGG,OAASF,EAAGE,OAExB,KAAK1B,EAAS2B,SACZ,OAAOJ,EAAGK,cAAcJ,GAE1B,QACE,OAAO,MAITN,GACFG,EAAaQ,UAGRR,EAgBgBS,CAAkBlB,EAAiB,CACxDI,WACAE,eAGF,OACE,sBAAKV,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEuB,QAAS,kBAAMd,EAAYjB,EAASyB,SACpCjB,UACEG,IAAW,aAAc,CACvB,WAAYK,IAAahB,EAASyB,SAJxC,4BAWA,cAAC,EAAD,CACEM,QAAS,kBAAMd,EAAYjB,EAAS2B,WACpCnB,UACEG,IAAW,UAAW,CACpB,WAAYK,IAAahB,EAAS2B,WAJxC,iCAWA,cAAC,EAAD,CACEI,QAxCQ,WACdZ,GAAc,SAAAa,GAAM,OAAMA,MAwCpBxB,UACEG,IAAW,aAAc,CACvB,YAAaO,IAJnB,sBAWEF,IAAahB,EAASe,MAAQG,IAC9B,cAAC,EAAD,CACEa,QAhDI,WACZd,EAAYjB,EAASe,MACrBI,GAAc,IA+CNX,UAAU,qBAFZ,sBASJ,cAAC,EAAD,CAAWN,eAAgBA,QGvHjC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ae2f5f08.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { GoodsList } from './components/GoodsList';\nimport { Button } from './components/Button';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const reverse = () => {\n    setIsReversed(status => (!status));\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const reorderedGoods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <Button\n          onClick={() => setSortType(SortType.LENGTH)}\n          className={\n            classNames('is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })\n          }\n        >\n          Sort by length\n        </Button>\n\n        <Button\n          onClick={() => setSortType(SortType.ALPHABET)}\n          className={\n            classNames('is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })\n          }\n        >\n          Sort alphabetically\n        </Button>\n\n        <Button\n          onClick={reverse}\n          className={\n            classNames('is-warning', {\n              'is-light': !isReversed,\n            })\n          }\n        >\n          Reverse\n        </Button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <Button\n            onClick={reset}\n            className=\"is-danger is-light\"\n          >\n            Reset\n          </Button>\n        )}\n      </div>\n\n      <GoodsList reorderedGoods={reorderedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  reorderedGoods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ reorderedGoods }) => (\n  <ul>\n    {reorderedGoods.map(good => (\n      <li key={good} data-cy=\"Good\">\n        { good }\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  children: React.ReactNode;\n};\n\nexport const Button: React.FC<Props> = (props) => {\n  const {\n    children,\n    className,\n    ...rest\n  } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames('button', className)}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}